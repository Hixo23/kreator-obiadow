generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String    @id @default(uuid())
  password String
  email    String    @unique
  role     Role      @default(USER)
  profile Profile?
}

model Recipe {
  id                 String    @id @default(uuid())
  name               String
  description        String
  imageUrl           String
  preparationProcess String
  preparationTime    Int       @default(0)
  ingredients        String
  dietType           String
  difficulty         String
  servings           Int       @default(0)
  author             Profile      @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId           String
  comments           Comment[]
  favorite Favorite[]
}

model Comment {
  id       String @id @default(uuid())
  content  String
  rating   Int    @default(0)
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  recipeId String
  author   Profile   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId String
}


model Profile {
    id  String @id @default(uuid())
    username String
    description String
    user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
    recipes Recipe[] 
    comments  Comment[]
    favorite Favorite[]
  }

model Favorite {
  id String @id @default(uuid())
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profileId String @unique
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}